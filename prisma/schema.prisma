datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String        @id @default(cuid())
  name          String?
  username      String?       @unique
  email         String?       @unique
  emailVerified DateTime?
  image         String?
  chatSessions  ChatSession[]
  messages      Messages[]
  accounts      Account[]
  sessions      Session[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model ChatSession {
  id        String     @id @default(cuid())
  users     User[]
  messages  Messages[] @relation("ChatMessages")
  createdAt DateTime   @default(now())
}

model Messages {
  id            String      @id @default(cuid())
  chatSession   ChatSession @relation("ChatMessages", fields: [chatSessionId], references: [id])
  chatSessionId String
  authorId      String
  author        User        @relation(fields: [authorId], references: [id], onDelete: Cascade)
  body          String
  createdAt     DateTime    @default(now())
}
